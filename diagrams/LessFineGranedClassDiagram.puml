@startuml
package kedinet.kedinet {
    class KedinetApplication {
        +main(String[] args)
    }
}

package kedinet.kedinet.config {
    class WebConfig {
        +addCorsMappings(CorsRegistry registry)
        +addFormatters(FormatterRegistry registry)
    }
}
package kedinet.kedinet.util {
    class FileUploadUtil {
        +void saveFile(String uploadDir, String fileName, MultipartFile multipartFile)
    }
}

package kedinet.kedinet.controller {
    class AdminController {
        +login(int loginId, String password)
        +getAdminDetails(String secretKey)
        +getCatsByAdmin(String secretKey)
        +deleteCat(String secretKey, Integer id)
        +updateCat(Integer id, Map<String, String> catData, MultipartFile[] images)
        +deleteImageByName(String imageName, String secretKey)
        +addCat(Map<String, String> catData, MultipartFile[] images)
    }

    class CatController {
        +readSearchedCats(Integer ageFrom, Integer ageTo, List<Breed> breeds, List<CanLiveWith> canLiveWithList, List<CoatLength> coatLengths, List<Color> colors, List<Gender> genders, Boolean isIndoorCat, List<Region> regions, List<Size> sizes, String sortOption)
        +readCat(int id)
        +getCatById(Integer id)
    }

    class UserController {
        +createUser(User newUser)
        +login(Map<String, String> loginData)
        +updatePassword(Map<String, String> request)
        +addFavorite(String secretKey, Integer catId)
        +getFavoriteCats(String secretKey)
        +removeFavorite(String secretKey, Integer catId)
    }
}

package kedinet.kedinet.dto {
    class AdminDTO {
        +Integer id
        +Integer loginId
        +String secretKey
        +String shelterName
        +Integer shelterId
    }

    class CatDTO {
        +Integer id
        +String name
        +Breed breed
        +Gender gender
        +String about
        +Integer age
        +Boolean isIndoorCat
        +Size size
        +CoatLength coatLength
        +CanLiveWith canLiveWith
        +Color color
        +String disease
        +Set<String> imageNames
        +ShelterDTO shelter
        +LocalDate dateAdded
    }

    class ShelterDTO {
        +Integer id
        +String name
        +String region
        +String address
        +String website
        +String email
        +String phone
    }

    class UserDTO {
        +Integer id
        +String email
        +String secretKey
        +Set<Integer> favCatIds
    }
}

package kedinet.kedinet.model {
    class Admin {
        +Integer id
        +Integer loginId
        +String password
        +String secretKey
        +Shelter shelter
    }

    class Cat {
        +Integer id
        +String name
        +Breed breed
        +Gender gender
        +String about
        +Integer age
        +Boolean isIndoorCat
        +Size size
        +CoatLength coatLength
        +CanLiveWith canLiveWith
        +Color color
        +String disease
        +Shelter shelter
        +Set<User> users
        +Set<Image> images
        +LocalDate dateAdded
    }

    class Image {
        +Integer id
        +String name
        +Cat cat
    }

    class Shelter {
        +Integer id
        +String name
        +Region region
        +String address
        +String website
        +String email
        +String phone
        +Admin admin
        +Set<Cat> cats
    }

    class User {
        +Integer id
        +String email
        +String password
        +String secretKey
        +Set<Cat> favCats
    }
}

package kedinet.kedinet.repository {
    interface AdminRepo {
        +findAdminByLoginId(Integer loginId)
        +findAdminByLoginIdAndPassword(Integer loginId, String password)
        +findBySecretKey(String secretKey)
    }

    interface CatRepo {
        +findByShelterId(Integer shelterId)
    }

    interface CatRepoCustom {
        +findFilteredCats(Integer ageFrom, Integer ageTo, List<Breed> breeds, List<CanLiveWith> canLiveWithList, List<CoatLength> coatLengths, List<Color> colors, List<Gender> genders, Boolean isIndoorCat, List<Region> regions, List<Size> sizes)
    }

    interface ImageRepo {
        +findByName(String name)
        +findByCatId(Integer catId)
    }

    interface UserRepo {
        +findByEmail(String email)
        +findByEmailAndPassword(String email, String password)
        +findBySecretKey(String secretKey)
        +deleteCatFromFavorites(Integer catId)
    }
}

package kedinet.kedinet.service {
    class CatRepoImpl {
        -EntityManager entityManager
    }

    class CatService {
        -CatRepo catRepo
        -ImageRepo imageRepo
    }
}

KedinetApplication --> WebConfig

WebConfig --> StringToSizeListConverter
WebConfig --> StringToBreedListConverter
WebConfig --> StringToCanLiveWithListConverter
WebConfig --> StringToCoatLengthListConverter
WebConfig --> StringToColorListConverter
WebConfig --> StringToGenderListConverter
WebConfig --> StringToRegionListConverter

AdminController --> AdminRepo
AdminController --> CatRepo
AdminController --> ImageRepo
AdminController --> UserRepo

CatController --> CatService
CatController --> CatRepo
CatController --> ImageRepo
CatController --> AdminRepo

UserController --> UserRepo
UserController --> CatRepo
UserController --> ImageRepo

CatRepoImpl --> EntityManager
CatService --> CatRepo
CatService --> ImageRepo

Admin --> Shelter
Cat --> Shelter
Cat --> Image
Cat --> User
User --> Cat

AdminRepo --> Admin
CatRepo --> Cat
CatRepoCustom --> CatRepo
ImageRepo --> Image
UserRepo --> User
CatRepoImpl --> CatRepoCustom

AdminDTO --> Admin
CatDTO --> Cat
CatDTO --> ShelterDTO
ShelterDTO --> Shelter
UserDTO --> User

StringToSizeListConverter --> Size
StringToBreedListConverter --> Breed
StringToCanLiveWithListConverter --> CanLiveWith
StringToCoatLengthListConverter --> CoatLength
StringToColorListConverter --> Color
StringToGenderListConverter --> Gender
StringToRegionListConverter --> Region

@enduml
